using System;
using System.Collections.Generic;

using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(Size = 0x680, GUID = 0x614B8197B1F1C0D1, NameHash = 0xDD7401143C40F868)]
    public class GcRobotGlobals : NMSTemplate
    {
        /* 0x000 */ public bool SwarmDrones;
        /* 0x004 */ public float GrenadeLaunchFlightTime;
        /* 0x008 */ public int AttackSentinelWantedValue;
        /* 0x00C */ public int MaxNumPatrolDrones;
        /* 0x010 */ public float UnderwaterPerceptionMargin;
        /* 0x014 */ public bool DronePatrolScanPlayer;
        /* 0x018 */ public float DroneSearchPickNearbyTime;
        /* 0x01C */ public float DroneSearchPickNearbyAngleMin;
        /* 0x020 */ public float DroneSearchPickNearbyAngleMax;
        /* 0x024 */ public float DroneInvestigateMinWitnessRange;
        /* 0x028 */ public float DroneInvestigateMinWitnessTime;
        /* 0x02C */ public float DroneInvestigateSpeedBoost;
        /* 0x030 */ public float DroneInvestigateSpeedBoostStartDistance;
        /* 0x034 */ public float DroneInvestigateSpeedBoostRange;
        /* 0x038 */ public float DroneCrimePostInvestigateWaitTime;
        /* 0x03C */ public float DroneAttackPlayerHeightOffset;
        /* 0x040 */ public float DroneSpawnTime;
        /* 0x044 */ public float DroneSpawnFadeTime;
        /* 0x048 */ public float LineOfSightReturnCheckMinDistance;
        /* 0x04C */ public float LineOfSightReturnCheckRadius;
        /* 0x050 */ public float LineOfSightReturnRange;
        /* 0x054 */ public float FakeQuadGuard;
        /* 0x058 */ public float RobotSightAngle;
        /* 0x060 */ public Vector3f DroneRepairOffset;
        /* 0x070 */ public float QuadLookAngleMin;
        /* 0x074 */ public float QuadLookAngleMax;
        /* 0x078 */ public Vector2f QuadLookTurnSpeeds;
        /* 0x080 */ public float QuadAttackTurnAngleMin;
        /* 0x084 */ public float QuadAttackTurnAngleMax;
        /* 0x088 */ public Vector2f QuadAttackTurnSpeeds;
        /* 0x090 */ public int DroneAggroDamage;
        /* 0x094 */ public float CombatWaveSpawnTime;
        /* 0x098 */ public float DronePerceptionMinHearingSpeed;
        /* 0x09C */ public float DroneSearchLookSpeed;
        /* 0x0A0 */ public float DroneSearchLookDistance;
        /* 0x0A4 */ public int DroneMiningValueActivate;
        /* 0x0A8 */ public int DroneCrimeWitnessLimit;
        /* 0x0AC */ public float DroneCrimeWitnessInvestigateDistance;
        /* 0x0B0 */ public float DroneCrimeProximityMultiplier;
        /* 0x0B4 */ public int DroneSeriousCrimeStep;
        /* 0x0B8 */ public bool DroneChatter;
        /* 0x0BC */ public int DroneHealth;
        /* 0x0C0 */ public int CorruptedDroneHealth;
        /* 0x0C4 */ public int QuadHealth;
        /* 0x0C8 */ public int WalkerHealth;
        /* 0x0CC */ public int DroneHealthSwarm;
        /* 0x0D0 */ public int QuadHealthSwarm;
        /* 0x0D4 */ public int WalkerHealthSwarm;
        /* 0x0D8 */ public float WalkerEnergyLength;
        /* 0x0DC */ public float WalkerEnergySpeedMin;
        /* 0x0E0 */ public float WalkerEnergySpeedMax;
        /* 0x0E4 */ public float WalkerEnergyRadiusStartMin;
        /* 0x0E8 */ public float WalkerEnergyRadiusStartMax;
        /* 0x0EC */ public float WalkerEnergyMinAlpha;
        /* 0x0F0 */ public float WalkerEnergyMaxAlpha;
        /* 0x0F4 */ public float CriticalHitSizeDrone;
        /* 0x0F8 */ public float CriticalHitSizeQuad;
        /* 0x0FC */ public float CriticalHitSizeWalker;
        /* 0x100 */ public float LabelOffsetDrone;
        /* 0x104 */ public float LabelOffsetQuad;
        /* 0x108 */ public float LabelOffsetWalker;
        /* 0x110 */ public Vector3f QuadCriticalOffset;
        /* 0x120 */ public Vector3f DroneCriticalOffset;
        /* 0x130 */ public Vector3f WalkerGunOffset1;
        /* 0x140 */ public Vector3f WalkerGunOffset2;
        /* 0x150 */ public float RobotSteeringFollowWeight;
        /* 0x154 */ public float RobotSteeringAvoidTurnWeight;
        /* 0x158 */ public float RobotSteeringAvoidCreaturesWeight;
        /* 0x15C */ public float RobotSteeringAvoidDangerWeight;
        /* 0x160 */ public GcScanData AttackScan;
        /* 0x174 */ public float RobotHUDMarkerRange;
        /* 0x178 */ public float RobotHUDMarkerFalloff;
        /* 0x17C */ public float RobotHUDMarkerMinChangeTime;
        /* 0x180 */ public float DroneSquadSpawnRadius;
        /* 0x184 */ public float DroneSpawnHeight;
        /* 0x188 */ public float DroneScale;
        /* 0x18C */ public float TestLookFactor;
        /* 0x190 */ public float TurnInPlaceTorque;
        /* 0x194 */ public float TurnInPlaceHopTorque;
        /* 0x198 */ public float TurnInPlaceHopTimeMin;
        /* 0x19C */ public float TurnInPlaceHopTimeMax;
        /* 0x1A0 */ public float TrackArrowOffsetMultiplier;
        /* 0x1A4 */ public float DroneCombatSpawnAngle;
        /* 0x1A8 */ public float CombatSpawnSquadRadiusDrones;
        /* 0x1AC */ public float CombatSpawnSquadRadiusRobots;
        /* 0x1B0 */ public float RobotMapScale;
        /* 0x1B4 */ public float WalkerTestNeckAngle;
        /* 0x1B8 */ public float SuspiciousFactorGoingToSceneDistance;
        /* 0x1BC */ public float SuspiciousFactorGoingToScene;
        /* 0x1C0 */ public float SuspiciousFactorBase;
        /* 0x1C4 */ public float WalkerLaserOvershootVehicleReducer;
        /* 0x1C8 */ public bool DronesUseEscalationTimer;
        /* 0x1C9 */ public bool DisableDronePerception;
        /* 0x1CC */ public float DroneHeightAngle;
        /* 0x1D0 */ public float DroneAttackGetInRangeBoost;
        /* 0x1D4 */ public float DroneAggressiveInvestigateAttackTime;
        /* 0x1D8 */ public float DronePushLaserForce;
        /* 0x1DC */ public float DronePushMaxSpeed;
        /* 0x1E0 */ public float DronePushMaxTurn;
        /* 0x1E4 */ public float DroneInvestigateMaxRange;
        /* 0x1E8 */ public float DroneInvestigateCooldownTime;
        /* 0x1EC */ public float DroneCriminalScanTime;
        /* 0x1F0 */ public bool DroneClickToMove;
        /* 0x1F4 */ public float DroneInvestigateMinScanTimeAttackMe;
        /* 0x1F8 */ public float DroneInvestigateMinScanTime;
        /* 0x200 */ public GcScanEffectData DroneScanEffect;
        /* 0x250 */ public float HeightTestSampleDistance;
        /* 0x254 */ public float HeightTestSampleTime;
        /* 0x258 */ public float CollisionDistance;
        /* 0x25C */ public float RobotSightTimer;
        /* 0x260 */ public float DroneReAttackTime;
        /* 0x264 */ public float DronePatrolAttackSightTime;
        /* 0x268 */ public float DronePatrolInvestigateSpeedBoost;
        /* 0x26C */ public float DronePatrolSearchTime;
        /* 0x270 */ public int MaxNumInvestigatingDrones;
        /* 0x274 */ public float DroneCrimeCooldown;
        /* 0x278 */ public float DroneCrimeCooldownWaitTime;
        /* 0x27C */ public float DroneCrimeCooldownWaitTimeAtMax;
        /* 0x280 */ public float DroneRadius;
        /* 0x284 */ public float DroneLightPulseFreq;
        /* 0x288 */ public float DroneLightPulseAmp;
        /* 0x28C */ public float DroneMaxScanLength;
        /* 0x290 */ public float DroneDecisionTime;
        /* 0x294 */ public float DroneInvestigateAttackDecisionTime;
        /* 0x298 */ public float DroneInvestigateMajorAttackDecisionTime;
        /* 0x29C */ public float DroneInvestigateMinPositionAngle;
        /* 0x2A0 */ public float DroneInvestigateMaxPositionAngle;
        /* 0x2A4 */ public float DroneInvestigateRepositionTime;
        /* 0x2A8 */ public float DroneInvestigateMinCrimeInterval;
        /* 0x2AC */ public float DroneScanRadius;
        /* 0x2B0 */ public float DroneMaxScanAngle;
        /* 0x2B4 */ public float DroneScanWaitTime;
        /* 0x2B8 */ public float DroneScanMinPerpSpeed;
        /* 0x2BC */ public float EnergyExplodeTime;
        /* 0x2C0 */ public float FollowRoutineArriveRadius;
        /* 0x2C4 */ public float WalkerPauseTime;
        /* 0x2C8 */ public float WalkerAttackRange;
        /* 0x2CC */ public float WalkerGuardAlertRange;
        /* 0x2D0 */ public float WalkerClosingRange;
        /* 0x2D4 */ public float WalkerAttackRate;
        /* 0x2D8 */ public float WalkerAttackAngle;
        /* 0x2DC */ public float WalkerMoveSpeed;
        /* 0x2E0 */ public float WalkerFastMoveFactor;
        /* 0x2E4 */ public float WalkerHeight;
        /* 0x2E8 */ public float WalkerNavRadius;
        /* 0x2EC */ public float WalkerPushTime;
        /* 0x2F0 */ public float WalkerPushRadius;
        /* 0x2F4 */ public float WalkerLaserOvershootStart;
        /* 0x2F8 */ public float WalkerLaserOvershootEnd;
        /* 0x2FC */ public float WalkerLaserBodyOffset;
        /* 0x300 */ public float WalkerObstacleSize;
        /* 0x304 */ public float WalkerGunShootTime;
        /* 0x308 */ public float WalkerGunChargeTime;
        /* 0x30C */ public float WalkerGunRate;
        /* 0x310 */ public float WalkerTitanFallHeight;
        /* 0x314 */ public float WalkerTitanFallSpeed;
        /* 0x318 */ public NMSString0x10 WalkerTitanFallEffect;
        /* 0x328 */ public float WalkerTitanFallEffectScale;
        /* 0x330 */ public NMSString0x10 WalkerTitanFallShake;
        /* 0x340 */ public float QuadAlertRange;
        /* 0x344 */ public float QuadAttackRange;
        /* 0x348 */ public float QuadAttackMinRange;
        /* 0x34C */ public float QuadAttackAngle;
        /* 0x350 */ public float QuadAttackRepositionTime;
        /* 0x354 */ public float QuadRepairOffsetChangeTime;
        /* 0x358 */ public float QuadRepairOffset;
        /* 0x35C */ public float QuadRepairScanArriveDistance;
        /* 0x360 */ public float QuadRepairRate;
        /* 0x364 */ public float QuadRepairScanRadius;
        /* 0x368 */ public float QuadRepairChargeTime;
        /* 0x36C */ public float QuadJumpBackRange;
        /* 0x370 */ public float QuadJumpBackCheckRange;
        /* 0x374 */ public float QuadJumpBackHeightRange;
        /* 0x378 */ public float QuadJumpBackJumpDistance;
        /* 0x37C */ public float QuadJumpBackJumpMinLength;
        /* 0x380 */ public float QuadJumpBackDoFlipDistance;
        /* 0x384 */ public float QuadJumpBackMinTime;
        /* 0x388 */ public float QuadJumpBackFacingAngle;
        /* 0x38C */ public float QuadJumpBackTestRadius;
        /* 0x390 */ public float QuadJumpBackTestHeightOffset;
        /* 0x394 */ public float QuadPounceRange;
        /* 0x398 */ public float QuadPounceMinRange;
        /* 0x39C */ public float QuadPounceMinTimeBetweenPounces;
        /* 0x3A0 */ public float QuadPounceOffset;
        /* 0x3A4 */ public float QuadPounceDamageRadius;
        /* 0x3A8 */ public float QuadCannotSeeTargetRepositionTime;
        /* 0x3AC */ public float QuadChargeTime;
        /* 0x3B0 */ public float QuadFireTime;
        /* 0x3B4 */ public float QuadChargeTargetLockPercent;
        /* 0x3B8 */ public float QuadHopMinTime;
        /* 0x3BC */ public float QuadHopCombatMinTime;
        /* 0x3C0 */ public int QuadDamageMoveThreshold;
        /* 0x3C4 */ public float QuadAttackRate;
        /* 0x3C8 */ public float QuadMoveSpeed;
        /* 0x3CC */ public float QuadLaserSpringMin;
        /* 0x3D0 */ public float QuadLaserSpringMax;
        /* 0x3D4 */ public float QuadLaserIntensity;
        /* 0x3D8 */ public float QuadFastMoveFactor;
        /* 0x3DC */ public float QuadTurnBlendTime;
        /* 0x3E0 */ public float QuadHeight;
        /* 0x3E4 */ public float QuadNavRadius;
        /* 0x3E8 */ public float QuadObstacleSize;
        /* 0x3EC */ public float QuadPatrolRadius;
        /* 0x3F0 */ public Vector2f QuadPatrolPauseTime;
        /* 0x3F8 */ public float QuadHearingRange;
        /* 0x3FC */ public float QuadSightRange;
        /* 0x400 */ public float QuadSightAngle;
        /* 0x404 */ public float DronePerceptionRange;
        /* 0x408 */ public float DronePerceptionSightRange;
        /* 0x40C */ public float DronePerceptionSightAngle;
        /* 0x410 */ public float AttackMoveMaxTime;
        /* 0x414 */ public float AttackMoveArrivalDistance;
        /* 0x418 */ public float LaserFadeTime;
        /* 0x41C */ public float LaserFadeTime2;
        /* 0x420 */ public GcRobotLaserData WalkerLaser;
        /* 0x470 */ public GcRobotLaserData QuadLaser;
        /* 0x4C0 */ public GcDroneData DroneControl;
    }
}
