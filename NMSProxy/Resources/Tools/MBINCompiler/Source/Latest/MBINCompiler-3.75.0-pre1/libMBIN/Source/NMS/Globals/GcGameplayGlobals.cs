using System;
using System.Collections.Generic;

using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(Size = 0x1E00, GUID = 0x59616D8A080ECB8A, NameHash = 0x71CAF682B6986E6E)]
    public class GcGameplayGlobals : NMSTemplate
    {
        /* 0x0000 */ public NMSString0x10 NexusRecipeCostType;
        /* 0x0010 */ public int NexusRecipeCostNaniteMultiplier;
        /* 0x0014 */ public float ShipScanPlanetRechargeMultiplier;
        /* 0x0018 */ public float ShipScanSpaceRechargeMultiplier;
        /* 0x0020 */ public NMSString0x10 FreeSuitSlotID;
        /* 0x0030 */ public float InitialLocationProtectionRadiusMultiplier;
        /* 0x0034 */ public float PartyPlanetSearchDistance;
        /* 0x0038 */ public float UnderwaterLightningDamageDistanceMultiplier;
        /* 0x003C */ public int MaxActiveWeatherHazardGifts;
        /* 0x0040 */ public float WeatherHazardGiftMaxDistance;
        /* 0x0044 */ public float WeatherHazardGiftLifeTime;
        /* 0x0048 */ public GcTechnologyCategory TechnologyOverrideForSmuggler;
        /* 0x004C */ public float MaxMeteorSurfaceAngle;
        /* 0x0050 */ public float StormGravityChangeTime;
        /* 0x0054 */ public float StormBonusJetpackMod;
        /* 0x0058 */ public float StormBonusSprintMod;
        /* 0x005C */ public float StormBonusMiningHeatMod;
        /* 0x0060 */ public float StormBonusMiningAmountMod;
        /* 0x0064 */ public GcPlayerHazardType StormBonusJetpackWeather;
        /* 0x0068 */ public GcPlayerHazardType StormBonusSprintWeather;
        /* 0x006C */ public GcPlayerHazardType StormBonusMiningHeatWeather;
        /* 0x0070 */ public GcPlayerHazardType StormBonusMiningAmountWeather;
        /* 0x0074 */ public float AlienPodThreshold2;
        /* 0x0078 */ public float AlienPodThreshold1;
        /* 0x0080 */ public Colour BulletTraceLineColour;
        /* 0x0090 */ public float BulletTraceLineWidth;
        /* 0x0094 */ public float TracerBeamStart;
        /* 0x0098 */ public float TracerBeamEnd;
        /* 0x009C */ public float VehicleAllIconScanTime;
        /* 0x00A0 */ public int GPSRandomChangeTimeWide;
        /* 0x00A4 */ public int GPSRandomChangeTimeMid;
        /* 0x00A8 */ public int GPSRandomChangeTimeNarrow;
        /* 0x00AC */ public float SalvageValueAsProds;
        /* 0x00B0 */ public int SalvageSubstanceValueThreshold;
        [NMS(Size = 0x4)]
        /* 0x00B8 */ public NMSString0x10[] SalvageRewardsShuttle;
        [NMS(Size = 0x4)]
        /* 0x00F8 */ public NMSString0x10[] SalvageRewardsDropship;
        [NMS(Size = 0x4)]
        /* 0x0138 */ public NMSString0x10[] SalvageRewardsFighter;
        [NMS(Size = 0x4)]
        /* 0x0178 */ public NMSString0x10[] SalvageRewardsScience;
        [NMS(Size = 0xA)]
        /* 0x01B8 */ public NMSString0x10[] SalvageTechList;
        /* 0x0258 */ public List<NMSString0x10> SalvageProdsList;
        /* 0x0268 */ public List<NMSString0x10> SalvageSubstancesList;
        /* 0x0278 */ public bool AlwaysSpaceBattle;
        /* 0x027C */ public float MultidimensionalFadeTime;
        /* 0x0280 */ public float TeleporterDistanceTravelledMultiplier;
        /* 0x0290 */ public GcScanEffectData BinocularSelectedEffect;
        /* 0x02E0 */ public Colour BinocularSelectedColour;
        /* 0x02F0 */ public Colour BinocularSelectedUnknownColour;
        /* 0x0300 */ public float CockpitScale;
        /* 0x0304 */ public float MaxDistanceForLadderTeleport;
        /* 0x0308 */ public float AngleFromBaseComputerWhenTeleporting;
        /* 0x030C */ public float DistanceFromBaseComputerWhenTeleporting;
        /* 0x0310 */ public float AutoTranslateWordChance;
        /* 0x0314 */ public bool MissionSurveySuggestSurveyForNearScannables;
        /* 0x0318 */ public float MissionSurveyMaxGuidanceDistance;
        /* 0x031C */ public float MissionSurveyMaxGuidanceDistanceWorms;
        /* 0x0320 */ public NMSString0x10 MissionSurveyWormID;
        /* 0x0330 */ public float MissionSurveyMarkerAutoHideTime;
        /* 0x0334 */ public float MissionSurveyScanRangeMultiplier;
        /* 0x0338 */ public float MissionSurveyMaxScanAngle;
        /* 0x033C */ public float MissionSurveyMaxScanAngleScannableComp;
        /* 0x0340 */ public float MissionSurveyBeginScanPercentageScannable;
        /* 0x0344 */ public float MissionSurveyBeginScanPercentageEvent;
        /* 0x0348 */ public float MissionSurveyScanSpeed;
        /* 0x034C */ public float MissionSurveyScanSpeedScannableComp;
        /* 0x0350 */ public float MissionSurveyRevealWithoutScanDistance;
        /* 0x0354 */ public float MissionSurveyAutoScanDistance;
        /* 0x0358 */ public float MissionSurveyAutoScanFlattenRadiusMul;
        /* 0x035C */ public float MissionSurveySonarMinPulseSpeed;
        /* 0x0360 */ public float MissionSurveySonarMaxPulseSpeed;
        /* 0x0364 */ public float MissionSurveySonarPulseSpeedBandCount;
        /* 0x0368 */ public float MissionSurveyMaxAngleOffset;
        /* 0x036C */ public float MissionSurveyMaxSignalConeAngle;
        /* 0x0370 */ public float MissionSurveyInShipArrivedDistance;
        /* 0x0374 */ public float SurveyBeginScanPercentage;
        /* 0x0378 */ public float SurveyScanMinSpeed;
        /* 0x037C */ public float SurveyScanMaxSpeed;
        /* 0x0380 */ public float SurveySonarPulseSpeedBandCount;
        /* 0x0384 */ public float SurveySonarMinPulseSpeed;
        /* 0x0388 */ public float SurveySonarMaxPulseSpeed;
        /* 0x038C */ public float SurveySonarMiddleRangeMin;
        /* 0x0390 */ public float SurveySonarMiddleRangeMax;
        /* 0x0394 */ public float SurveyMaxDistance;
        /* 0x0398 */ public int CreaturesToBaitForTutorial;
        /* 0x039C */ public int CreaturesToFeedForTutorial;
        /* 0x03A0 */ public bool DisableGalaxyMapInQuickMenu;
        /* 0x03A1 */ public bool DisableNexusInQuickMenu;
        /* 0x03A2 */ public bool EnableTeleporters;
        /* 0x03A3 */ public bool AllowSpaceScanEvents;
        /* 0x03A4 */ public bool CanMoveTechnology;
        /* 0x03A8 */ public float NormalModeHeatBonus;
        /* 0x03AC */ public float BaseLaserHeatTime;
        /* 0x03B0 */ public float HeatAlertTime;
        /* 0x03B4 */ public float HeatAlertTimeSurvival;
        /* 0x03B8 */ public float HeatDamageBoost;
        /* 0x03BC */ public float HeatWidthBoost;
        /* 0x03C0 */ public float HeatWidthBoostAlt;
        /* 0x03C4 */ public float OverheatGenerosity;
        /* 0x03C8 */ public float HeatMaxPowerPoint;
        /* 0x03CC */ public float HeatMaxPowerPointSurvival;
        /* 0x03D0 */ public float OverheatDecay;
        /* 0x03D4 */ public float OverheatDecaySurvival;
        /* 0x03D8 */ public TkCurveType OverheatCurve;
        /* 0x03DC */ public TkCurveType OverheatCurveSurvival;
        /* 0x03E0 */ public bool UseOverheatColour;
        /* 0x03F0 */ public Colour OverHeatColour;
        /* 0x0400 */ public Colour OverHeatBarColour;
        /* 0x0410 */ public Colour OverHeatColourSurvival;
        /* 0x0420 */ public TkCurveType OverheatColourCurve;
        /* 0x0424 */ public TkCurveType OverheatColourCurveSurvival;
        /* 0x0428 */ public int RefinerProductsMadeInTime;
        /* 0x042C */ public int RefinerSubsMadeInTime;
        /* 0x0430 */ public int RefinerProductsMadeInTimeSurvival;
        /* 0x0434 */ public int RefinerSubsMadeInTimeSurvival;
        /* 0x0438 */ public List<NMSString0x10> HyperdriveAccess;
        /* 0x0448 */ public List<NMSString0x10> FreighterHyperdriveAccess;
        /* 0x0458 */ public float SeasonalMessageModuleAttractDistanceMul;
        /* 0x045C */ public float HmdInteractionRangeMinRange;
        /* 0x0460 */ public float HmdInteractionRangeMinDistance;
        /* 0x0464 */ public float HmdInteractionRangeMultiplier;
        /* 0x0468 */ public bool InstallTechWithInteraction;
        /* 0x0469 */ public bool FreighterRequiresRGBHyperdriveUpgrades;
        /* 0x046A */ public bool DisableAnomalyAmbientSpawn;
        /* 0x046B */ public bool AllowDeconstruct;
        /* 0x046C */ public bool AllowBinocularMarker;
        /* 0x046D */ public bool EveryMaintenanceIsBroken;
        /* 0x046E */ public bool SpawnResourceBlobsOnPartDelete;
        /* 0x046F */ public bool EnableShootHitEffect;
        /* 0x0470 */ public int MaxNumSameGroupTech;
        /* 0x0474 */ public float ShootableArmourHighlightHitTime;
        /* 0x0478 */ public float ShootableAggroMinStartTime;
        /* 0x047C */ public float ShootableAggroForgetTime;
        /* 0x0480 */ public Colour RefinerColour1A;
        /* 0x0490 */ public Colour RefinerColour1B;
        /* 0x04A0 */ public Colour RefinerColour1C;
        /* 0x04B0 */ public Colour RefinerColour1D;
        /* 0x04C0 */ public float AtmosphereEntryTime;
        /* 0x04C4 */ public float AtmosphereEntryFadeTimeFactor;
        /* 0x04C8 */ public float AtmosphereEntryOffset;
        /* 0x04CC */ public TkCurveType AtmosphereEntryCurve;
        /* 0x04D0 */ public float AtmosphereEntryErrorTime;
        /* 0x04D4 */ public float TerrainResourceScanTime;
        /* 0x04D8 */ public float TerrainResourceScanRange;
        /* 0x04DC */ public float TerrainResourceCompassRange;
        /* 0x04E0 */ public bool BinocsDisplayUnknownCreatures;
        /* 0x04E4 */ public float BinocularScanTargetMinHeight;
        /* 0x04E8 */ public float BinocularScanTargetHeightRange;
        /* 0x04EC */ public float BinocTimeBeforeScan;
        /* 0x04F0 */ public float BinocMinScanTime;
        /* 0x04F4 */ public float BinocScanTime;
        /* 0x04F8 */ public float BinocCreatureScanTime;
        /* 0x04FC */ public TkCurveType BinocularScanTargetHeightCurve;
        /* 0x0500 */ public float BinocularScanTargetInitialFadeTime;
        /* 0x0504 */ public float BinocularScanTargetScaler;
        /* 0x0508 */ public float BinocularScanTargetLineWidth;
        /* 0x050C */ public float BinocularScanTargetFadeTime;
        /* 0x0510 */ public Colour BinocularScanTargetColour;
        /* 0x0520 */ public GcScanEffectData BinocularScanEffect;
        /* 0x0570 */ public float ScannerIconsClumpRadius;
        /* 0x0574 */ public float ScannableComponentMarkerOffset;
        /* 0x0578 */ public float ScannableComponentPlaceMarkerOffset;
        /* 0x057C */ public float MissionEventAllowResetDistance;
        /* 0x0580 */ public float AllRecipesKnownNanitesMin;
        /* 0x0584 */ public float AllRecipesKnownNanitesMax;
        /* 0x0588 */ public float MaxPossibleShipDamagePotential;
        /* 0x058C */ public float BuildingPlayerBaseIconOffset;
        /* 0x0590 */ public float CriticalHitMultiplier;
        /* 0x0594 */ public float HitEffectMinTime;
        /* 0x0598 */ public float GrabPlayerCooldownTime;
        /* 0x059C */ public float TapInteractionIncreaseAmount;
        /* 0x05A0 */ public float TapInteractionDecay;
        /* 0x05B0 */ public GcScanEffectData DeconstructEffect;
        /* 0x0600 */ public GcScanEffectData HitEffect;
        /* 0x0650 */ public GcScanEffectData HitEffectCritical;
        /* 0x06A0 */ public float CommunicatorSpawnOffset;
        /* 0x06A4 */ public float CommunicatorSpawnHeightOffset;
        /* 0x06B0 */ public Vector3f CommunicatorShipSpawnOffset;
        /* 0x06C0 */ public float CommunicatorSpawnScale;
        /* 0x06C4 */ public float CommunicatorSpawnRotation;
        /* 0x06C8 */ public float CommunicatorFadeTime;
        /* 0x06D0 */ public List<GcScanEffectData> CommunicatorEffectTable;
        /* 0x06E0 */ public int MaxNumMissionsFromMissionGiver;
        /* 0x06E4 */ public float InteractionMinTimeBeforeHighlightedOptionSelection;
        /* 0x06E8 */ public float InteractionMinTimeBetweenStickOptionHighlights;
        /* 0x06EC */ public float InteractionStickOptionStrength;
        /* 0x06F0 */ public float InteractionMessageModuleDisplayTime;
        /* 0x06F4 */ public float InteractionAttractTime;
        /* 0x06F8 */ public float InteractionDescriptionTextTime;
        /* 0x06FC */ public float InteractionMinTimeForResponseText;
        /* 0x0700 */ public bool InteractionOverride;
        /* 0x0704 */ public GcInteractionType InteractionOverrideFrom;
        /* 0x0708 */ public GcInteractionType InteractionOverrideTo;
        /* 0x070C */ public float DestroyEffectHeight;
        /* 0x0710 */ public float DestroyEffectMaxScale;
        /* 0x0714 */ public float EventTargetSpeed;
        /* 0x0718 */ public int SpecialMiningAmount;
        /* 0x071C */ public float SpecialMiningTime;
        /* 0x0720 */ public int HardModeTechDamageMidNum;
        /* 0x0724 */ public int HardModeTechDamageMidPercent;
        /* 0x0728 */ public int HardModeTechDamageHighPercent;
        /* 0x072C */ public int EarlyPiratesToBeKilled;
        /* 0x0730 */ public int PirateInterestOverride;
        /* 0x0734 */ public float PirateInterestDistance;
        /* 0x0738 */ public float PirateInterestDistanceMPMission;
        [NMS(Size = 0x3)]
        /* 0x073C */ public int[] PirateInterestLevels;
        [NMS(Size = 0x3)]
        /* 0x0748 */ public int[] PirateInterestLevelsSurvival;
        /* 0x0754 */ public float SpaceCombatRadius;
        /* 0x0758 */ public int WarpsBetweenBattles;
        /* 0x075C */ public float HoursBetweenBattles;
        /* 0x0760 */ public float SpaceBattleRadius;
        /* 0x0764 */ public float SpaceBattleAnyHostileShipsRadius;
        /* 0x0768 */ public float FreighterBattleRadius;
        /* 0x076C */ public float MissileMaxTurnAngle;
        /* 0x0770 */ public float MissileLockTime;
        /* 0x0774 */ public float MissileReloadTime;
        /* 0x0778 */ public float MissileRotateMin;
        /* 0x077C */ public float MissileRotateMax;
        /* 0x0780 */ public float MissileMaxSpeed;
        /* 0x0784 */ public float MissileForceMin;
        /* 0x0788 */ public float MissileForceMax;
        /* 0x078C */ public float MissileBrakeForceMin;
        /* 0x0790 */ public float MissileBrakeForceMax;
        /* 0x0794 */ public float MissileThreatTime;
        /* 0x0798 */ public float MissileBrakeTime;
        /* 0x079C */ public float MissileHitRadius;
        /* 0x07A0 */ public float MissileOffset;
        /* 0x07A4 */ public float MissileMinCircleTime;
        /* 0x07A8 */ public float MissileApproachTime;
        /* 0x07AC */ public float MissileRotateSpeed;
        /* 0x07B0 */ public float ScanStartTimeDelayMinDist;
        /* 0x07B4 */ public float ScanStartTimeDelayRange;
        /* 0x07B8 */ public float ScanStartTimeDistanceDelayTime;
        /* 0x07BC */ public float ScanStickyDecay;
        /* 0x07C0 */ public float CreatureScanStickyDecay;
        /* 0x07C4 */ public float CreatureScanAngle;
        /* 0x07C8 */ public float CreatureMinScanTime;
        /* 0x07CC */ public float ScanAngle;
        /* 0x07D0 */ public float NewDiscoveryDisplayTime;
        /* 0x07D4 */ public bool FailToFindBuildings;
        /* 0x07D8 */ public float WaterLandingDamageMultiplier;
        /* 0x07DC */ public int CritDamage;
        /* 0x07E0 */ public float CritScale;
        /* 0x07E4 */ public int NumMissionsPerSolarSystem;
        /* 0x07E8 */ public float EmergencyBuildingScanEventDistance;
        /* 0x07EC */ public float EmergencyBuildingScanEventTime;
        /* 0x07F0 */ public float ProjectileLightIntensity;
        /* 0x07F4 */ public float AggressiveSentinelProbability;
        /* 0x07F8 */ public float AggressiveSentinelProbabilitySurvival;
        /* 0x07FC */ public float LowSentinelProbability;
        /* 0x0800 */ public float LowSentinelProbabilitySurvival;
        /* 0x0804 */ public float NonAggressiveLushSurvivalProbabability;
        /* 0x0808 */ public int MaxDronesLow;
        /* 0x080C */ public int MaxDronesLowSurvival;
        /* 0x0810 */ public int MaxDronesNormal;
        /* 0x0814 */ public int MaxDronesNormalSurvival;
        /* 0x0818 */ public int MaxDronesAggressive;
        /* 0x081C */ public int MaxDronesAggressiveSurvival;
        /* 0x0820 */ public GcExperienceTimers SentinelTimersLow;
        /* 0x0840 */ public GcExperienceTimers SentinelTimersNormal;
        /* 0x0860 */ public GcExperienceTimers SentinelTimersSurvival;
        /* 0x0880 */ public int FreighterStartPecent;
        /* 0x0884 */ public GcExperienceTimers FreighterTimers;
        /* 0x08A4 */ public GcExperienceTimers PirateTimers;
        /* 0x08C4 */ public GcExperienceTimers HardPirateTimers;
        /* 0x08E8 */ public List<float> PirateEarlySpawnChances;
        /* 0x08F8 */ public float PirateEarlySpawnTime;
        /* 0x08FC */ public GcExperienceTimers FlybyTimers;
        /* 0x091C */ public GcExperienceTimers SpaceFlybyTimers;
        [NMS(Size = 0x5)]
        /* 0x093C */ public int[] FreighterTechQualityWeightings;
        /* 0x0950 */ public int SentinelsHigh;
        /* 0x0954 */ public int SentinelsLow;
        /* 0x0958 */ public float AsteroidHitForce;
        /* 0x095C */ public float AsteroidTorqueForce;
        /* 0x0960 */ public float AsteroidCarveRadius;
        /* 0x0964 */ public int DeathMoneyPenalty;
        /* 0x0968 */ public int DeathMoneyPenaltyHardMode;
        /* 0x096C */ public int MaxResourceCrystalBlobSize;
        /* 0x0970 */ public float BuildingBeamDistance;
        /* 0x0974 */ public float WaypointScanTime;
        /* 0x0978 */ public int RareSubstanceEffectiveness;
        /* 0x097C */ public int CommonProductEffectiveness;
        /* 0x0980 */ public int RareProductEffectiveness;
        /* 0x0984 */ public int AsteroidResourceReducer;
        /* 0x0988 */ public int TunnelStatReducer;
        /* 0x098C */ public float VoxelAsteroidResourceChance;
        /* 0x0990 */ public int ResourceReducer;
        /* 0x0994 */ public int ResourceMinAmount;
        /* 0x0998 */ public int ResourceMaxAmount;
        /* 0x099C */ public int ResourceCommonReducer;
        /* 0x09A0 */ public int ResourceCommonMinAmount;
        /* 0x09A4 */ public int ResourceCommonMaxAmount;
        /* 0x09A8 */ public int ResourceDirtReducer;
        /* 0x09AC */ public int ResourceDirtMinAmount;
        /* 0x09B0 */ public int ResourceDirtMaxAmount;
        /* 0x09B8 */ public NMSString0x10 ResourceDirtSubstanceID;
        /* 0x09C8 */ public NMSString0x10 SandwormTerrainResource;
        /* 0x09D8 */ public NMSString0x10 BioShipTerrainResource;
        /* 0x09E8 */ public NMSString0x20 RobotResource;
        /* 0x0A08 */ public NMSString0x20 DepotResource;
        /* 0x0A28 */ public float DockNodeBuyRadius;
        /* 0x0A2C */ public float BeaconInteractRange;
        /* 0x0A30 */ public float ShipInteractRadius;
        /* 0x0A34 */ public GcResourceCollectEffect AsteroidResourceCollect;
        /* 0x0A68 */ public float ScanAngleCutoff;
        /* 0x0A6C */ public GcScanData ToolScan;
        /* 0x0A80 */ public GcScanData ToolScanHardMode;
        /* 0x0A94 */ public GcScanData WaypointScan;
        /* 0x0AA8 */ public GcScanData BeaconScan;
        /* 0x0ABC */ public GcScanData RadioTowerScan;
        /* 0x0AD0 */ public GcScanData ObservatoryScan;
        /* 0x0AE4 */ public GcScanData DistressSignalScan;
        /* 0x0AF8 */ public GcScanData DebugScanPlanet;
        /* 0x0B0C */ public GcScanData DebugScanSpace;
        /* 0x0B20 */ public GcScanData ShipScan;
        /* 0x0B34 */ public GcScanData VisualScan;
        /* 0x0B48 */ public float ZoomFindBuildingRange;
        /* 0x0B4C */ public float TimeToDisplayScanResults;
        /* 0x0B50 */ public float HoverTimeToScan;
        /* 0x0B54 */ public float HoverTimeToScanCreatures;
        /* 0x0B58 */ public int HoverVisiblePointsNeeded;
        /* 0x0B60 */ public List<GcZoomData> ZoomLevels;
        /* 0x0B70 */ public GcScanEffectData PassiveScanEffect;
        /* 0x0BC0 */ public GcScanEffectData BuildingScanEffect;
        /* 0x0C10 */ public GcScanEffectData TargetShipScanEffect;
        /* 0x0C60 */ public GcScanEffectData HUDShipScanEffect;
        /* 0x0CB0 */ public GcScanEffectData CreatureScanEffect;
        /* 0x0D00 */ public GcScanEffectData ObjectsScanEffect;
        /* 0x0D50 */ public GcScanEffectData VRGhostScanEffect;
        /* 0x0DA0 */ public GcScanEffectData BlankScanEffect;
        /* 0x0DF0 */ public GcScanEffectData BaseBuildingValidScanEffect;
        /* 0x0E40 */ public GcScanEffectData BaseBuildingPreviewSelectionScanEffect;
        /* 0x0E90 */ public GcScanEffectData BaseBuildingSelectionScanEffect;
        /* 0x0EE0 */ public GcScanEffectData BaseBuildingDeleteScanEffect;
        /* 0x0F30 */ public GcScanEffectData BaseBuildingGhostScanEffect;
        /* 0x0F80 */ public GcScanEffectData BaseBuildingSpawnStaticEffect;
        /* 0x0FD0 */ public GcScanEffectData BaseBuildingVisionScanEffect;
        /* 0x01020 */ public GcScanEffectData BaseBuildingErrorInsideScanEffect;
        /* 0x1070 */ public GcScanEffectData BaseBuildingErrorCollisionScanEffect;
        /* 0x10C0 */ public GcScanEffectData BaseBuildingErrorImpossibleScanEffect;
        /* 0x1110 */ public GcScanEffectData BaseBuildingErrorUnaffordableScanEffect;
        /* 0x1160 */ public GcScanEffectData BaseBuildingErrorAboveWaterScanEffect;
        /* 0x11B0 */ public GcScanEffectData BaseBuildingErrorBelowWaterScanEffect;
        /* 0x1200 */ public GcScanEffectData BaseBuildingRemotePlayerValidScanEffect;
        /* 0x1250 */ public GcScanEffectData BaseBuildingRemotePlayerSelectionScanEffect;
        /* 0x12A0 */ public float BaseBuildingRemotePlayerErrorAlphaScanEffect;
        /* 0x12A4 */ public bool UseDebugScan;
        /* 0x12A5 */ public bool DebugScanForceBuilding;
        /* 0x12A8 */ public GcBuildingClassification DebugScanForceBuildingType;
        /* 0x12AC */ public float ShipScanOffset;
        /* 0x12B0 */ public float ShipScanOffsetGap;
        /* 0x12B4 */ public TkCurveType ShipScanCurve;
        /* 0x12B8 */ public float ScannerMarkerFadeTime;
        /* 0x12BC */ public float ScannerSmallMarkerFadeTime;
        /* 0x12C0 */ public float ScannerPhysicsProbeAABBSize;
        /* 0x12C4 */ public float ScannerAnalyzeFXRate;
        /* 0x12C8 */ public float ScannerSubstanceTimePerTrigger;
        /* 0x12CC */ public float ScannerTuningA;
        /* 0x12D0 */ public float ScannerTuningB;
        /* 0x12D4 */ public float ScannerTuningC;
        /* 0x12D8 */ public float ScannerTuningD;
        /* 0x12DC */ public float ScannerTuningResourceOffset1;
        /* 0x12E0 */ public float ScannerTuningResourceOffset2;
        /* 0x12E4 */ public float ScannerTuningSmoothStepAmount;
        /* 0x12E8 */ public float ScannerTuningTrailingEdge;
        /* 0x12EC */ public bool Autolevel;
        /* 0x12F0 */ public Colour ScannerColour1;
        /* 0x1300 */ public Colour ScannerColour2;
        /* 0x1310 */ public float HUDStoreFlashTime;
        /* 0x1314 */ public float ExcitingViewAngle;
        /* 0x1318 */ public float ExcitingViewRange;
        /* 0x131C */ public float ExcitingNearRange;
        /* 0x1320 */ public float ProjectileSpeedBoost;
        /* 0x1324 */ public float LineWidth;
        /* 0x1328 */ public float LockOffFactor;
        /* 0x132C */ public float OffscreenFadeDistance;
        /* 0x1330 */ public float OffscreenMinDot;
        /* 0x1334 */ public bool HUDUpdateFromData;
        /* 0x1338 */ public float HUDLockOnAudioTime;
        /* 0x133C */ public float HUDArrowPrimaryScaler;
        /* 0x1340 */ public Vector2f HUDDamageSize;
        /* 0x1348 */ public Vector2f HUDDamageSplatSize;
        /* 0x1350 */ public Colour HUDDamageSplatShieldColour;
        /* 0x1360 */ public Colour HUDDamageSplatPainColour;
        /* 0x1370 */ public float HUDDamageOffset;
        /* 0x1374 */ public float HUDDamageScaler;
        /* 0x1378 */ public float HUDDamageRadius;
        /* 0x1380 */ public GcShipHUDTargetData HUDTarget;
        /* 0x17B0 */ public float HUDLabelTime;
        /* 0x17B4 */ public float HUDLabelAngle;
        /* 0x17B8 */ public float HUDLabelAngleOffset;
        /* 0x17BC */ public float HUDLabelOffsetX;
        /* 0x17C0 */ public float HUDLabelOffsetY;
        /* 0x17C4 */ public float HUDLabelOffsetZ;
        /* 0x17C8 */ public float HUDLabelScale;
        /* 0x17CC */ public bool PlayHitEffectsOnZeroDamage;
        /* 0x17D0 */ public float MaxSpawnTime;
        /* 0x17D4 */ public NMSString0x80 ResourceParticleFile;
        /* 0x1854 */ public float ResourceParticleSpeed;
        /* 0x1858 */ public float ResourceParticleSpread;
        /* 0x185C */ public int ResourceParticleMaxNum;
        /* 0x1860 */ public int ResourceParticleMinNum;
        /* 0x1864 */ public float MapHeight;
        /* 0x1868 */ public float MapOffset;
        /* 0x186C */ public float MapTargetOffset;
        /* 0x1870 */ public float MapFOV;
        /* 0x1874 */ public float MapRadius;
        /* 0x1878 */ public float HUDScaleAdd;
        /* 0x187C */ public float HUDScaleRadius;
        /* 0x1880 */ public float HUDScaleMin;
        /* 0x1884 */ public float HUDScaleMinAim;
        /* 0x1888 */ public float HUDScaleMax;
        /* 0x188C */ public float HUDScaleFarTarget;
        /* 0x1890 */ public float HUDReticuleMoveBack;
        /* 0x1894 */ public float HUDReticuleMoveAim;
        /* 0x1898 */ public float MouseSensitivity;
        /* 0x189C */ public float MouseSensitivityShip;
        /* 0x18A0 */ public float MouseSensitivityVehicle;
        /* 0x18A4 */ public float PainTime;
        /* 0x18A8 */ public TkCurveType PainCurve;
        /* 0x18B0 */ public Colour PainColour;
        /* 0x18C0 */ public float GunOffsetX;
        /* 0x18C4 */ public float GunOffsetY;
        /* 0x18C8 */ public float GunOffsetZ;
        /* 0x18CC */ public float GunDownAngle;
        /* 0x18D0 */ public float GunUpAngle;
        /* 0x18D4 */ public float BarrelOffset;
        /* 0x18D8 */ public float HitOffset;
        /* 0x18DC */ public GcTracerData BulletTracer;
        /* 0x18F4 */ public GcTracerData ShipTracer;
        /* 0x1910 */ public NMSString0x10 DefaultAnim;
        /* 0x1920 */ public bool DebugDrawTriggerBoxes;
        /* 0x1924 */ public float SpeedReadoutMultiplier;
        /* 0x1928 */ public float SpaceSpeedReadoutMultiplier;
        /* 0x192C */ public int TorchCookieIndex;
        /* 0x1930 */ public float TorchFoV;
        /* 0x1934 */ public float TorchStrength;
        /* 0x1938 */ public int TorchDimCookieIndex;
        /* 0x193C */ public float TorchDimFoV;
        /* 0x1940 */ public float TorchDimStrength;
        /* 0x1944 */ public float InteractionTorchFoV;
        /* 0x1948 */ public float InteractionTorchStrength;
        /* 0x194C */ public float UndergroundTorchFoV;
        /* 0x1950 */ public float UndergroundTorchFoVFar;
        /* 0x1954 */ public float UndergroundTorchStrength;
        /* 0x1958 */ public float UndergroundTorchStrengthFar;
        /* 0x195C */ public float TorchOffsetX;
        /* 0x1960 */ public float TorchOffsetY;
        /* 0x1964 */ public float TorchOffsetZ;
        /* 0x1968 */ public float TorchOffsetZMin;
        /* 0x196C */ public float TorchOffsetZSpeedRange;
        /* 0x1970 */ public float TorchOffsetZMinSpeed;
        /* 0x1974 */ public float TorchHandOffsetX;
        /* 0x1978 */ public float TorchHandOffsetY;
        /* 0x197C */ public float TorchHandOffsetZ;
        /* 0x1980 */ public bool TorchDisabledInTheDay;
        /* 0x1984 */ public float TorchRotation;
        /* 0x1988 */ public float TorchFollowCameraPitch;
        /* 0x198C */ public float TorchFollowCameraTime;
        /* 0x1990 */ public Colour TorchColour;
        /* 0x19A0 */ public float PlayerAmbientSpotLightIntensity;
        /* 0x19B0 */ public Colour PlayerAmbientSpotLightColour;
        /* 0x19C0 */ public float PlayerAmbientSpotLightOffsetY;
        /* 0x19C4 */ public float PlayerAmbientSpotLightOffsetZ;
        /* 0x19C8 */ public float SimpleInteractionPickupAngle;
        /* 0x19CC */ public float SimpleInteractionPickupRadius;
        /* 0x19D0 */ public float SimpleInteractionMessageTime;
        /* 0x19D4 */ public float InteractionPickupAngle;
        /* 0x19D8 */ public float InteractionPickupRadius;
        /* 0x19DC */ public float ExplosionRadiusMultiplier;
        /* 0x19E0 */ public float ExplosionForce;
        /* 0x19E4 */ public float ExplosionForceMaxForceRadius;
        /* 0x19E8 */ public float LaserExplosionForceRadius;
        /* 0x19EC */ public float LaserExplosionForce;
        /* 0x19F0 */ public float LaserExplosionForceMaxForceRadius;
        /* 0x19F4 */ public NMSString0x80 InitialDebrisScene;
        /* 0x1A74 */ public float BonusSameTypeElementsAdd;
        /* 0x1A78 */ public float BonusSameTypeElementsMultiply;
        /* 0x1A7C */ public float BonusChildTypeElementsAdd;
        /* 0x1A80 */ public float BonusChildTypeElementsMultiply;
        /* 0x1A84 */ public float InteractionComponentUpdateDistance;
        /* 0x1A88 */ public float GoalGapVoxelDist;
        /* 0x1A8C */ public float BlackHoleJumpVoxelDist;
        /* 0x1A90 */ public float BlackHoleJumpVoxelVariation;
        /* 0x1A94 */ public float JumpToCenterFuelCost;
        /* 0x1A98 */ public int WarpsBetweenMiniStation;
        /* 0x1A9C */ public float HoursBetweenMiniStation;
        /* 0x1AA0 */ public NMSString0x80 LegacyBaseBuildingTable;
        /* 0x1B20 */ public NMSString0x80 BaseBuildingTable;
        /* 0x1BA0 */ public float BaseBuildingHoverTimeToKnowPart;
        /* 0x1BA8 */ public ulong NPCWorkerInteractionCooldown;
        /* 0x1BB0 */ public float LightStrength;
        /* 0x1BB4 */ public float AirLockDoorRange;
        /* 0x1BB8 */ public bool DisableBasePowerHUDOverlay;
        /* 0x1BB9 */ public bool KeepAttackingMaxWantedLevel;
        /* 0x1BBA */ public bool UseMultiplierBonus;
        /* 0x1BBC */ public float ShipDisplayDamageMultiplier;
        /* 0x1BC0 */ public float IllegalProductTradingMod;
        /* 0x1BC4 */ public bool UseTradingCostTable;
        /* 0x1BC5 */ public bool ChangePricesLocally;
        /* 0x1BC6 */ public bool ShowPriceMarkupsAsPercentages;
        /* 0x1BC8 */ public int ProductItemStockDecayTime;
        /* 0x1BCC */ public int ProductItemStockReplenishTime;
        /* 0x1BD0 */ public int SubstanceItemStockDecayTime;
        /* 0x1BD4 */ public int SubstanceItemStockReplenishTime;
        /* 0x1BD8 */ public GcPortalData Portal;
        /* 0x1BE0 */ public int FourthRaceSpawnPercentage;
        /* 0x1BE4 */ public int NonDominantRaceSpawnPercentage;
        /* 0x1BE8 */ public float ViciousSentinelProbability;
        /* 0x1BEC */ public float ViciousStormProbability;
        /* 0x1BF0 */ public float ViciousWeatherProbability;
        /* 0x1BF4 */ public float ScrapDroneProbability;
        /* 0x1BF8 */ public float MaxRespawnOnGroundHeight;
        /* 0x1BFC */ public float DeadPlanetGravityFactor;
        /* 0x1C00 */ public GcScanEffectData ShipSalvageScanEffect;
        /* 0x1C50 */ public float SalvageShipPitch;
        /* 0x1C54 */ public float SalvageShipHeightOffset;
        /* 0x1C58 */ public float SalvageShipExplodeSpeed;
        /* 0x1C5C */ public float SalvageShipShowShipSpeed;
        /* 0x1C60 */ public float SalvageShipShowShipDistance;
        /* 0x1C64 */ public float SalvageShipExplodeShipDistance;
        /* 0x1C68 */ public float SalvageShipOneRevolutionTime;
        /* 0x1C70 */ public NMSString0x20A CommunicatorFireteamNexusExitDialog;
        /* 0x1C90 */ public NMSString0x20A CommunicatorNexusExitAbandonWarningDialog;
        /* 0x1CB0 */ public float PulseEncounterCheckTimer;
        /* 0x1CB4 */ public float PulseEncounterChance;
        /* 0x1CB8 */ public float PulseEncounterChanceStandard;
        /* 0x1CBC */ public float PulseEncounterChanceRed;
        /* 0x1CC0 */ public float PulseEncounterChanceGreen;
        /* 0x1CC4 */ public float PulseEncounterChanceBlue;
        /* 0x1CC8 */ public float PulseEncounterStopPower;
        /* 0x1CCC */ public float PulseEncounterStopSpeed;
        [NMS(Size = 0x5)]
        /* 0x1CD0 */ public int[] AlienShipEvolveCosts;
        /* 0x1CE4 */ public float SpawnerWeaponRange;
        /* 0x1CE8 */ public TkTextureResource WeaponSpawnObject;
        /* 0x1D6C */ public TkTextureResource WeaponSpawnAltObject;
        /* 0x1DF0 */ public bool UseCustomSaveDirectory;
    }
}

/* Notes and algorithms:

Since the names for the sentinal timer and flyby timers are a bit hard to understand,
this is the algorithm that shows how the game uses them:

if SentinelLevel == Agressive:
	MaxActiveDrones = 1
	SentinelTimer = SentinelTimer_Default_or_Aggressive
	FlybyTimer = FlybyTimer_B_or_Aggressive
else:
	MaxActiveDrones = 2
	if RNG(0,100) >= SentinelTimer_Default_Chance_percent:
		SentinelTimer = SentinelTimer_A
		if RNG(0,100) < SentinelTimer_B_Chance_percent:
			SentinelTimer = SentinelTimer_B
	else:
		SentinelTimer = SentinelTimer_Default_or_Aggressive
	
	if RNG(0,100) >= FlybyTimer_Default_Chance_percent:
		FlybyTimer = FlybyTimer_A
		if RNG(0,100) < FlybyTimer_B_Chance_percent:
			FlybyTimer = FlybyTimer_B_or_Aggressive
	else:
		FlybyTimer = FlybyTimer_Default
*/