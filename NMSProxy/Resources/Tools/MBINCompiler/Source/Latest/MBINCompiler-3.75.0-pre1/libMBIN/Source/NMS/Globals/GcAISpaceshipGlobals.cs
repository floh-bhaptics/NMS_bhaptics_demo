using System;
using System.Collections.Generic;

using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(Size = 0xE40, GUID = 0x862A153314A798A7, NameHash = 0xD338272248F67908)]
    public class GcAISpaceshipGlobals : NMSTemplate
    {
        /* 0x000 */ public float MinimumCircleTimeBeforeLanding;
        /* 0x004 */ public float MinimumTimeBetweenOutpostLandings;
        /* 0x008 */ public float VisibleDistance;
        /* 0x00C */ public bool TradersAttackPirates;
        /* 0x00D */ public bool FreightersAlwaysAttackPlayer;
        /* 0x00E */ public bool GroundEffectEnabled;
        /* 0x00F */ public bool AtmosphereEffectEnabled;
        /* 0x010 */ public bool FillUpOutposts;
        /* 0x014 */ public float SalvageTime;
        /* 0x018 */ public float SalvageRemovalTime;
        /* 0x01C */ public float SalvageValueMultiplier;
        /* 0x020 */ public float DockingWaitDistance;
        /* 0x024 */ public int MaxNumActiveTraders;
        /* 0x028 */ public float MaxNumActiveTraderRadius;
        /* 0x02C */ public int MaxNumActivePolice;
        /* 0x030 */ public float MaxNumActivePoliceRadius;
        /* 0x034 */ public int MinAggroDamage;
        /* 0x038 */ public float TrailLandingFadeTime;
        /* 0x03C */ public float MinLaserFireTime;
        /* 0x040 */ public float ShipAlertPirateRange;
        /* 0x044 */ public float EscapeRollTime;
        /* 0x048 */ public float EscapeRollPlanet;
        /* 0x04C */ public float EscapeRoll;
        /* 0x050 */ public int CrashedShipMinNonBrokenSlots;
        /* 0x054 */ public float CrashedShipBrokenSlotChance;
        /* 0x058 */ public float CrashedShipBrokenTechChance;
        /* 0x05C */ public float CrashedShipRepairSlotCostIncreaseFactor;
        /* 0x060 */ public float CrashedShipGeneralCostDiscount;
        /* 0x064 */ public float CrashedShipTechSlotsCostDiscount;
        /* 0x068 */ public float PirateSpawnSpacing;
        /* 0x06C */ public float DistanceFlareMinDistance;
        /* 0x070 */ public float DistanceFlareRange;
        /* 0x074 */ public float DistanceFlareMinScale;
        /* 0x078 */ public float DistanceFlareMaxScale;
        /* 0x07C */ public float DistanceFlareMinSpeed;
        /* 0x080 */ public float DistanceFlareSpeedRange;
        /* 0x084 */ public float DistanceFlareFlickerFreq;
        /* 0x088 */ public float DistanceFlareFlickerAmp;
        /* 0x08C */ public bool AttackRepositionBoost;
        /* 0x08D */ public bool AttackShipsFollowLeader;
        /* 0x090 */ public float AttackTooCloseMinRelSpeed;
        /* 0x094 */ public float RewardLootOffset;
        /* 0x098 */ public float RewardLootOffsetSpeed;
        /* 0x09C */ public float RewardLootAngularSpeed;
        /* 0x0A0 */ public float FlybyPlanetLandingProbability;
        /* 0x0A8 */ public GcSpaceshipTravelData PirateTravel;
        /* 0x108 */ public GcSpaceshipTravelData PoliceTravel;
        /* 0x168 */ public GcSpaceshipTravelData TraderAttackTravel;
        /* 0x1C8 */ public float AttackShipAvoidStartTime;
        /* 0x1CC */ public float AttackMinimumTimeBeforeTargetSwitch;
        /* 0x1D0 */ public GcShipAIAttackData Attack;
        /* 0x2A0 */ public float PirateExtraDamage;
        /* 0x2A4 */ public float ShieldCollisionRadiusMultiplier;
        /* 0x2A8 */ public float CollisionRayLengthMin;
        /* 0x2AC */ public float CollisionRayLengthMax;
        /* 0x2B0 */ public GcSpaceshipTravelData OutpostLanding;
        /* 0x310 */ public GcSpaceshipTravelData PlanetLanding;
        /* 0x370 */ public float OutpostLandingNoiseFreq;
        /* 0x374 */ public float OutpostLandingNoiseAmp;
        /* 0x378 */ public float OutpostLandingNoiseOffset;
        /* 0x37C */ public float OutpostDockUpAlignMaxAngleFirstPerson;
        /* 0x380 */ public float OutpostDockUpAlignMaxAngle;
        /* 0x384 */ public float OutpostDockMaxApproachSpeed;
        /* 0x388 */ public float OutpostDockOverspeedBrake;
        /* 0x38C */ public float OutpostDockGetToApproachForce;
        /* 0x390 */ public float OutpostDockGetToApproachBrakeForce;
        /* 0x394 */ public float OutpostDockGetToApproachExtraBrakeForce;
        /* 0x398 */ public float OutpostDockApproachSpeedForce;
        /* 0x39C */ public float OutpostDockApproachDistance;
        /* 0x3A0 */ public float OutpostDockApproachSpeedUpDamper;
        /* 0x3A4 */ public float OutpostDockAIGetToApproachForce;
        /* 0x3A8 */ public float OutpostDockAIGetToApproachBrakeForce;
        /* 0x3AC */ public float OutpostDockAIApproachSpeedForce;
        /* 0x3B0 */ public float OutpostDockMaxForce;
        /* 0x3B4 */ public float OutpostDockMinTipLength;
        /* 0x3B8 */ public float OutpostDockMaxTipLength;
        /* 0x3BC */ public float OutpostDockApproachUpAmount;
        /* 0x3C0 */ public float OutpostDockApproachRenderRadius;
        /* 0x3C4 */ public float OutpostDockApproachRenderFlickerOffset;
        /* 0x3C8 */ public float LandingTipAngle;
        /* 0x3CC */ public float LandingLongTipAngle;
        /* 0x3D0 */ public Vector2f SpaceBattleSpawnAngle;
        /* 0x3D8 */ public Vector2f SpaceBattleSpawnPitch;
        /* 0x3E0 */ public Vector2f SpaceBattleSpawnOffset;
        /* 0x3E8 */ public Vector2f SpaceBattleSunHeightAngle;
        /* 0x3F0 */ public Vector2f SpaceBattleSunAroundAngle;
        /* 0x3F8 */ public List<Vector2f> SpaceBattleSpawnRange;
        /* 0x408 */ public List<Vector2f> SpaceBattlePirateRange;
        /* 0x418 */ public List<Vector2f> SpaceBattleGuardsRange;
        /* 0x428 */ public float SpaceBattleGuardOffset;
        /* 0x42C */ public float SpaceBattleGuardUpOffset;
        /* 0x430 */ public float SpaceBattleInitialPirateUpOffset;
        /* 0x434 */ public float SpaceBattleInitialPirateOffset;
        /* 0x438 */ public float SpaceBattleObstructionRadius;
        /* 0x43C */ public float SpaceBattleFlybyTime;
        /* 0x440 */ public int SpaceBattleLevel;
        /* 0x444 */ public Vector2f ConeSpawnOffsetFactor;
        /* 0x44C */ public float ConeSpawnFlattenUp;
        /* 0x450 */ public float ConeSpawnFlattenDown;
        /* 0x454 */ public bool FreighterAlertLights;
        /* 0x458 */ public float FreighterAlertLightCapitalSize;
        /* 0x45C */ public NMSString0x80 LegacyHangarFilename;
        /* 0x4DC */ public NMSString0x80 HangarFilename;
        /* 0x55C */ public float PoliceFreighterWarpOutRange;
        /* 0x560 */ public float MissileRange;
        /* 0x570 */ public Colour FreighterDoorColourActive;
        /* 0x580 */ public Colour FreighterDoorColourInactive;
        /* 0x590 */ public Colour AlertLightColour;
        /* 0x5A0 */ public TkHitCurveData FreighterLightHitCurve;
        /* 0x5B0 */ public float FreighterAlertLightTime;
        /* 0x5B4 */ public float FreighterAlertLightIntensity;
        /* 0x5B8 */ public int MaxNumTurretMissiles;
        /* 0x5BC */ public float TurretOriginOffset;
        /* 0x5C0 */ public float TurretAlertLightIntensity;
        /* 0x5D0 */ public Vector3f TurretAlertLightOffset;
        /* 0x5E0 */ public bool DisableTradeRoutes;
        /* 0x5E4 */ public float AttackFreighterGetThereBoost;
        /* 0x5E8 */ public float AttackFreighterApproach;
        /* 0x5EC */ public float AttackFreighterWingmanAlignMinDist;
        /* 0x5F0 */ public float AttackFreighterWingmanAlignRange;
        /* 0x5F4 */ public float AttackFreighterApproachDistance;
        /* 0x5F8 */ public float AttackFreighterAttackRunStartDistance;
        /* 0x5FC */ public float AttackFreighterBugOutDistance;
        /* 0x600 */ public float AttackFreighterButOutTurnUp;
        /* 0x604 */ public float AttackFreighterButOutSpeedUp;
        /* 0x608 */ public float AttackFreighterWingmanRadius;
        /* 0x60C */ public float AttackFreighterWingmanOffset;
        /* 0x610 */ public float AttackFreighterWingmanLockAlign;
        /* 0x614 */ public float AttackFreighterWingmanLock;
        /* 0x618 */ public float AttackFreighterWingmanMaxForce;
        /* 0x61C */ public float AttackFreighterAngle;
        /* 0x620 */ public float AttackFreighterRunOffset;
        /* 0x624 */ public float AttackFreighterWingmanStart;
        /* 0x628 */ public float PirateFreighterWarpOffset;
        /* 0x62C */ public Vector2f PirateFreighterAttackRange;
        /* 0x634 */ public float MissileLaunchSpeed;
        /* 0x638 */ public float AttackAfterSpawnTime;
        /* 0x63C */ public Vector2f FreighterMiniSpeeds;
        /* 0x644 */ public float AsteroidShootAngle;
        /* 0x648 */ public float TraderWantedTime;
        /* 0x64C */ public float TraderRequestTime;
        /* 0x650 */ public float TraderPostCombatRequestTime;
        /* 0x654 */ public float TradingPostTraderRequestTime;
        /* 0x658 */ public float TradingPostTraderRange;
        /* 0x65C */ public float TradingPostTraderRangeSpace;
        /* 0x660 */ public float SpaceStationTraderRequestTime;
        /* 0x664 */ public float AbandonedSystemShipSpawnProbablity;
        /* 0x668 */ public int FlybyCloseOdds;
        /* 0x66C */ public float BountySpawnAngle;
        /* 0x670 */ public GcShipAIAttackData BountyAttack;
        /* 0x740 */ public float PoliceLaunchSpeed;
        /* 0x744 */ public float PoliceLaunchTime;
        /* 0x748 */ public float PolicePauseTime;
        /* 0x74C */ public float PolicePauseTimeSpaceBattle;
        /* 0x750 */ public float PoliceEscapeTime;
        /* 0x754 */ public float PoliceEscapeMinTime;
        /* 0x758 */ public float PoliceStationWaveTimer;
        /* 0x75C */ public float PoliceStationEngageRange;
        /* 0x760 */ public int PoliceStationNumToLaunch;
        /* 0x764 */ public int TraderIgnoreHits;
        /* 0x768 */ public float PirateFreighterSpawnAttackAngle;
        /* 0x76C */ public float PirateFreighterSpawnAttackOffset;
        /* 0x770 */ public float PirateFreighterSpawnAttackSpread;
        /* 0x774 */ public float PirateSpawnAngle;
        /* 0x778 */ public float PirateBattleMaxTime;
        /* 0x77C */ public float PirateArriveTime;
        /* 0x780 */ public float PirateBattleStartSpeed;
        /* 0x784 */ public float PirateInterestTime;
        /* 0x788 */ public float PirateBattleInterestTime;
        /* 0x78C */ public float TraderArriveSpeed;
        /* 0x790 */ public float TraderArriveTime;
        /* 0x794 */ public float HeightTestSampleDistance;
        /* 0x798 */ public float HeightTestSampleTime;
        /* 0x79C */ public float OutpostToLandingDistance;
        /* 0x7A0 */ public bool FreightersSamePalette;
        /* 0x7A4 */ public float PlanetUpAlignTime;
        /* 0x7A8 */ public float CollisionReactionTime;
        /* 0x7AC */ public float FreighterScale;
        /* 0x7B0 */ public bool PoliceSpawnEffect;
        /* 0x7B4 */ public int MaxNumFreighters;
        /* 0x7B8 */ public float ShipSpawnStationRadius;
        /* 0x7BC */ public float ShipSpawnAnomalyRadius;
        /* 0x7C0 */ public float BattleSpawnStationMinDistance;
        /* 0x7C4 */ public float PoliceSpawnViewAngle;
        /* 0x7C8 */ public float PoliceEntranceStartTime;
        /* 0x7CC */ public float PoliceEntranceProbe;
        /* 0x7D0 */ public float PoliceEntranceEscalateProbingTime;
        /* 0x7D4 */ public float PoliceEntranceEscalateIncomingTime;
        /* 0x7D8 */ public float PoliceArriveTime;
        /* 0x7DC */ public float PoliceAbortRange;
        /* 0x7E0 */ public float PoliceWarnBeaconPulseTime;
        /* 0x7E4 */ public float TrailScaleMinDistance;
        /* 0x7E8 */ public float TrailScale;
        /* 0x7EC */ public float TrailScaleRange;
        /* 0x7F0 */ public float TrailScaleMaxScale;
        /* 0x7F4 */ public float TrailScaleFreighterMaxScale;
        /* 0x7F8 */ public TkCurveType TrailScaleCurve;
        /* 0x7FC */ public float TradeRouteSeekOutpostRange;
        /* 0x800 */ public float TradeRouteFollowOffset;
        /* 0x804 */ public NMSString0x100 TradeRouteIcon;
        /* 0x904 */ public float TradeRouteSpawnDistance;
        /* 0x908 */ public float TradeRouteTrailDrawDistance;
        /* 0x90C */ public float TradeRouteTrailFadeTime;
        /* 0x910 */ public float TradeRouteTrailTimeOffset;
        /* 0x914 */ public float TradeRouteStationRadius;
        /* 0x918 */ public float TradeRouteSpeed;
        /* 0x91C */ public float TradeRouteSlowRange;
        /* 0x920 */ public float TradeRouteSlowSpeed;
        /* 0x924 */ public int TradeRouteDivisions;
        /* 0x928 */ public float TradeRouteFlickerFreq;
        /* 0x92C */ public float TradeRouteFlickerAmp;
        /* 0x930 */ public int TradeRouteMaxNum;
        /* 0x938 */ public List<Colour> TradeRouteColours;
        /* 0x948 */ public bool EnableLoot;
        /* 0x94C */ public float LaserHitOffset;
        /* 0x950 */ public float DirectionBrakeThresholdSq;
        /* 0x954 */ public int PoliceNumPerTarget;
        /* 0x958 */ public Vector2f PoliceSideOffset;
        /* 0x960 */ public Vector2f PoliceUpOffset;
        /* 0x968 */ public float WitnessHearingRange;
        /* 0x96C */ public float WitnessSightRange;
        /* 0x970 */ public float WitnessSightAngle;
        /* 0x974 */ public float FreighterImpactScale;
        /* 0x978 */ public float FreighterAlertThreshold;
        /* 0x97C */ public float FreighterAttackDisengageDistance;
        /* 0x980 */ public float FreighterAttackAlertThreshold;
        /* 0x984 */ public float FreighterAlertTimeOutRate;
        /* 0x988 */ public float FreighterAlertTimeOutMinTime;
        /* 0x98C */ public float FreighterShipLaunchSpeed;
        /* 0x990 */ public float FreighterLaunchTime;
        /* 0x994 */ public float FreighterLaunchStartTime;
        /* 0x998 */ public bool FreighterIgnorePlayer;
        /* 0x99C */ public int FreighterNotifySquadAlertLevel;
        /* 0x9A0 */ public int FreighterMaxNumLaunchedShips;
        /* 0x9A4 */ public float FreighterSpawnMargin;
        /* 0x9A8 */ public float FreighterSpawnRadius;
        /* 0x9AC */ public float FreighterSpawnRate;
        /* 0x9B0 */ public float FreighterSpawnViewAngle;
        /* 0x9B4 */ public float FreighterSpawnVisibleFreightersDistance;
        /* 0x9B8 */ public float FrigateSpawnMargin;
        /* 0x9BC */ public float EngineFlareAccelMin;
        /* 0x9C0 */ public float EngineFlareAccelMax;
        /* 0x9C4 */ public float EngineFlareSizeMin;
        /* 0x9C8 */ public float EngineFlareSizeMax;
        /* 0x9CC */ public float EngineFlareVibrateAmp;
        /* 0x9D0 */ public float EngineFlareVibrateFreq;
        /* 0x9D4 */ public float EngineFlareOffset;
        /* 0x9D8 */ public float EngineFireSize;
        /* 0x9DC */ public float PitchFlip;
        /* 0x9E0 */ public float AttackAimTime;
        /* 0x9E4 */ public float AttackRunSlowdown;
        /* 0x9E8 */ public float PiratePlayerAttackRange;
        /* 0x9EC */ public float MoveHeightAdjust;
        /* 0x9F0 */ public float MoveAvoidRange;
        /* 0x9F4 */ public int MoveHeightNumSamples;
        /* 0x9F8 */ public float MoveHeightSampleSectionSize;
        /* 0x9FC */ public float MoveHeightCheckTime;
        /* 0xA00 */ public float TurretRandomOffset;
        /* 0xA04 */ public float TurretRandomAIShipOffset;
        /* 0xA08 */ public float PoliceLaunchDistance;
        /* 0xA0C */ public float Scaler;
        /* 0xA10 */ public float ScaleTime;
        /* 0xA14 */ public float ScalerMinDist;
        /* 0xA18 */ public float ScalerMaxDist;
        /* 0xA1C */ public float ScaleHeightMin;
        /* 0xA20 */ public float ScaleHeightMax;
        /* 0xA24 */ public bool ScaleDisabledWhenOnFreighter;
        /* 0xA28 */ public float WarpInPlayerLocatorTime;
        /* 0xA2C */ public float WarpInPlayerLocatorMinOffset;
        /* 0xA30 */ public float WarpInTime;
        /* 0xA34 */ public float WarpFadeInTime;
        /* 0xA38 */ public float WarpInTimeFreighter;
        /* 0xA3C */ public TkCurveType WarpInCurve;
        /* 0xA40 */ public float WarpInVariance;
        /* 0xA44 */ public float WarpInDistance;
        /* 0xA48 */ public float WarpInPostSpeed;
        /* 0xA4C */ public float WarpInPostSpeedFreighter;
        /* 0xA50 */ public float WarpInAudioFXDelay;
        /* 0xA54 */ public float WarpOutDistance;
        /* 0xA58 */ public float PirateFlybyLength;
        /* 0xA5C */ public float FlybyLength;
        /* 0xA60 */ public float FlybyHeight;
        /* 0xA64 */ public float FlybyOffset;
        /* 0xA68 */ public GcProjectileLineData ShipBullet;
        /* 0xA90 */ public GcSpaceshipTravelData TraderTravel;
        /* 0xAF0 */ public GcSpaceshipTravelData FrigateTravel;
        /* 0xB50 */ public float WingmanLockDistance;
        /* 0xB54 */ public float WingmanLockBetweenTime;
        /* 0xB58 */ public float WingmanLockArriveTime;
        /* 0xB5C */ public float WingmanMinHeight;
        /* 0xB60 */ public float WingmanHeightAdjust;
        /* 0xB64 */ public float WingmanStartTime;
        /* 0xB68 */ public float WingmanOffsetStart;
        /* 0xB6C */ public float WingmanOffset;
        /* 0xB70 */ public float WingmanSideOffset;
        /* 0xB74 */ public float WingmanRotate;
        /* 0xB78 */ public float WingmanAtTime;
        /* 0xB7C */ public float WingmanAtTimeBack;
        /* 0xB80 */ public float WingmanPerpTime;
        /* 0xB84 */ public float WingmanVelocityBand;
        /* 0xB88 */ public float WingmanVelocityBandForce;
        /* 0xB8C */ public float TraderAtTime;
        /* 0xB90 */ public float TraderAtTimeBack;
        /* 0xB94 */ public float TraderPerpTime;
        /* 0xB98 */ public float TraderVelocityBand;
        /* 0xB9C */ public float TraderVelocityBandForce;
        /* 0xBA0 */ public float WingmanAlign;
        /* 0xBA4 */ public float WarpSpeed;
        /* 0xBA8 */ public float WarpForce;
        /* 0xBAC */ public float TrailSpeedFadeMinSpeed;
        /* 0xBB0 */ public float TrailSpeedFadeFalloff;
        /* 0xBB4 */ public float DockingLandingTime;
        /* 0xBB8 */ public float DockingLandingTimeDirectional;
        /* 0xBBC */ public float DockingSpringTime;
        /* 0xBC0 */ public float DockingLandingBounceTime;
        /* 0xBC4 */ public float DockingLandingBounceHeight;
        /* 0xBC8 */ public float DockingRotateStartTime;
        /* 0xBCC */ public float DockingRotateSpeed;
        /* 0xBD0 */ public float DockWaitMinTime;
        /* 0xBD4 */ public float DockWaitMaxTime;
        /* 0xBD8 */ public float TakeOffHoverPointReachedDistance;
        /* 0xBDC */ public float TakeOffExitHeightOffset;
        /* 0xBE0 */ public float TakeOffExtraAIHeight;
        /* 0xBE4 */ public float LandingManuevreTime;
        /* 0xBE8 */ public float LandingManeuvreAlignTime;
        /* 0xBEC */ public float LandingHoverPointReachedDistance;
        /* 0xBF0 */ public float LandingDirectionalHoverPointReachedDistance;
        /* 0xBF4 */ public float AtmosphereTerminalSpeed;
        /* 0xBF8 */ public float CircleApproachDistance;
        /* 0xBFC */ public float TravelMinBoostTime;
        /* 0xC00 */ public float GroundCircleHeight;
        /* 0xC04 */ public float GroundCircleHeightMax;
        /* 0xC08 */ public float OrbitHeight;
        /* 0xC0C */ public float AtmosphereEffectMin;
        /* 0xC10 */ public float AtmosphereEffectMax;
        /* 0xC14 */ public float MaxTorque;
        /* 0xC18 */ public float ShipAngularFactor;
        /* 0xC1C */ public float RollAmount;
        /* 0xC20 */ public float RollMinTurnAngle;
        /* 0xC24 */ public float FinalDeathExplosionScale;
        /* 0xC28 */ public float FinalDeathExplosionTime;
        /* 0xC2C */ public float FinalDeathFadeTime;
        /* 0xC30 */ public GcShipAIDeathData Death;
        /* 0xC50 */ public GcShipAIAttackData AttackPlanet;
        /* 0xD20 */ public GcShipAIAttackData TraderAttack;
        /* 0xDF0 */ public GcShipAIPlanetPatrolData WingmanPathData;
        /* 0xE28 */ public List<GcAIShipDebugSpawnData> DebugShipSpawns;
    }
}
