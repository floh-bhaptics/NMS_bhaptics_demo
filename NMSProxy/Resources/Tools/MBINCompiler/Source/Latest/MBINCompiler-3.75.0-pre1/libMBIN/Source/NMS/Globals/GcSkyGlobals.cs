using System;
using System.Collections.Generic;

using libMBIN.NMS.Toolkit;
using libMBIN.NMS.GameComponents;

namespace libMBIN.NMS.Globals
{
    [NMS(Size = 0xE20, GUID = 0x4C15E1414232BD2A, NameHash = 0x5BED7FBA4647E787)]
    public class GcSkyGlobals : NMSTemplate
    {
        /* 0x000 */ public float RainbowDistance;
        /* 0x004 */ public float RainbowScale;
        /* 0x008 */ public float RainbowWidth;
        /* 0x00C */ public float RainbowAlpha;
        /* 0x010 */ public float RainbowStormAlpha;
        /* 0x014 */ public float RainbowFadeWidth;
        /* 0x018 */ public float NightThreshold;
        /* 0x01C */ public GcPhotoModeAdjustData FogAdjust;
        /* 0x034 */ public GcPhotoModeAdjustData CloudAdjust;
        /* 0x04C */ public GcPhotoModeAdjustData VignetteAdjust;
        /* 0x064 */ public TkCurveType DoFAdjustMagnitudeMaxCurve;
        /* 0x068 */ public int DayLength;
        /* 0x070 */ public Vector3f SunRotationAxis;
        /* 0x080 */ public int SafeSkyMinIndex;
        /* 0x084 */ public int SafeSkyMaxIndex;
        /* 0x088 */ public int FrozenSkyMinIndex;
        /* 0x08C */ public int FrozenSkyMaxIndex;
        /* 0x090 */ public float SunClampAngle;
        /* 0x094 */ public Vector2f PhotoModeVignette;
        /* 0x09C */ public float PhotoModeSunSpeed;
        /* 0x0A0 */ public float PhotoModeMacroMaxDOFAngle;
        /* 0x0A4 */ public float PhotoModeMacroMaxDOFAperture;
        /* 0x0A8 */ public bool UpdateWeatherWhenSunLocked;
        /* 0x0AC */ public float WeatherFilterSpaceTransitionChangeTime;
        /* 0x0B0 */ public float FreshStartTimeOfDay;
        /* 0x0B4 */ public bool ForceStormSetting;
        /* 0x0B8 */ public float ForceStormStrength;
        /* 0x0BC */ public float StormScreenFilterFadeTime;
        /* 0x0C0 */ public float StormScreenFilterDistance;
        /* 0x0C4 */ public float MinTimeBetweenStormsLow;
        /* 0x0C8 */ public float MaxTimeBetweenStormsLow;
        /* 0x0CC */ public float MinTimeBetweenStormsHigh;
        /* 0x0D0 */ public float MaxTimeBetweenStormsHigh;
        /* 0x0D4 */ public float MinTimeBetweenStormsExtremeFallback;
        /* 0x0D8 */ public float MaxTimeBetweenStormsExtremeFallback;
        /* 0x0DC */ public float MinStormLengthLow;
        /* 0x0E0 */ public float MaxStormLengthLow;
        /* 0x0E4 */ public float MinStormLengthHigh;
        /* 0x0E8 */ public float MaxStormLengthHigh;
        /* 0x0EC */ public float StormWarningTime;
        /* 0x0F0 */ public float StormTransitionTime;
        /* 0x0F4 */ public float MaxCloudCover;
        /* 0x0F8 */ public float MaxStormCloudCover;
        /* 0x0FC */ public bool ForceFlightSetting;
        /* 0x100 */ public float ForceFlightStrength;
        /* 0x104 */ public float ToFootFadeTime;
        /* 0x108 */ public float ToFlightFadeTime;
        /* 0x10C */ public float InFlightStormStrength;
        /* 0x110 */ public float CreatureStormThreshold;
        /* 0x114 */ public float TakeoffStormThreshold;
        /* 0x118 */ public float ExtremeAudioLevel;
        /* 0x11C */ public float StormAudioLevel;
        /* 0x120 */ public float CloudCoverSmoothTime;
        /* 0x124 */ public float CloudRatioSmoothTime;
        /* 0x128 */ public float StormCloudTopColourMinBlend;
        /* 0x12C */ public float StormCloudTopColourMaxBlend;
        /* 0x130 */ public float StormCloudBottomColourMinBlend;
        /* 0x134 */ public float StormCloudBottomColourMaxBlend;
        /* 0x138 */ public float StormCloudSmoothTime;
        /* 0x13C */ public bool SleepSunFromSettings;
        /* 0x140 */ public Vector3f SleepSunFromSettingsPos;
        /* 0x150 */ public Vector3f SunPosition;
        /* 0x160 */ public Colour AsteroidColour;
        /* 0x170 */ public Colour DayLightColour;
        /* 0x180 */ public Colour NightLightColour;
        /* 0x190 */ public Colour DuskLightColour;
        /* 0x1A0 */ public Colour NightHeavyAirColour;
        /* 0x1B0 */ public Colour SpaceLightColour;
        /* 0x1C0 */ public Colour AbandonedFreighterFogColour;
        /* 0x1D0 */ public float HeavyAirScale;
        /* 0x1D4 */ public float AmbientFactor;
        /* 0x1D8 */ public float MinSunsetFade;
        /* 0x1DC */ public float MaxSunsetFade;
        /* 0x1E0 */ public float MinSunsetHorizonFade;
        /* 0x1E4 */ public float MaxSunsetHorizonFade;
        /* 0x1E8 */ public float MinNightFade;
        /* 0x1EC */ public float MaxNightFade;
        /* 0x1F0 */ public float MinSunsetPosFade;
        /* 0x1F4 */ public float MaxSunsetPosFade;
        /* 0x1F8 */ public float MinSunsetFogFade;
        /* 0x1FC */ public float MaxSunsetFogFade;
        /* 0x200 */ public float MinSunsetAtmosphereFade;
        /* 0x204 */ public float MaxSunsetAtmosphereFade;
        /* 0x208 */ public float MinSunsetColourFade;
        /* 0x20C */ public float MaxSunsetColourFade;
        /* 0x210 */ public float MinSaturation;
        /* 0x214 */ public float MaxSaturation;
        /* 0x218 */ public float MinValue;
        /* 0x21C */ public float MaxValue;
        /* 0x220 */ public float MinFogSaturation;
        /* 0x224 */ public float MaxFogSaturation;
        /* 0x228 */ public float MinFogValue;
        /* 0x22C */ public float MaxFogValue;
        /* 0x230 */ public float MinColourS;
        /* 0x234 */ public float MaxColourS;
        /* 0x238 */ public float MinColourV;
        /* 0x23C */ public float MaxColourV;
        /* 0x240 */ public float MulticolourH;
        /* 0x244 */ public float NebulaColourH;
        /* 0x248 */ public float NebulaColour1S;
        /* 0x24C */ public float NebulaColour1V;
        /* 0x250 */ public float NebulaColour2S;
        /* 0x254 */ public float NebulaColour2V;
        /* 0x258 */ public float MidColourH;
        /* 0x25C */ public float MidColourS;
        /* 0x260 */ public float MidColourV;
        /* 0x264 */ public float CloudColourH;
        /* 0x268 */ public float CloudColourS;
        /* 0x26C */ public float CloudColourV;
        /* 0x270 */ public float SpaceAtmosphereThickness;
        /* 0x274 */ public float WaterHeavyAirAlpha;
        /* 0x278 */ public float NightHorizonBlendMin;
        /* 0x27C */ public float NightHorizonBlendMax;
        /* 0x280 */ public float NightSkyBlendMin;
        /* 0x284 */ public float NightSkyBlendMax;
        /* 0x288 */ public float NightLightBlendMin;
        /* 0x28C */ public float NightLightBlendMax;
        /* 0x290 */ public bool ForceNightBlend;
        /* 0x294 */ public float ForceNightBlendValue;
        /* 0x298 */ public float NoAtmosphereFogStrength;
        /* 0x29C */ public float NoAtmosphereFogMax;
        /* 0x2A0 */ public float NoAtmosphereColourStrength;
        /* 0x2A4 */ public float NoAtmosphereColourMax;
        /* 0x2A8 */ public float LowFlightFogThreshold;
        /* 0x2AC */ public GcPlanetSkyProperties PlanetProperties;
        /* 0x65C */ public GcPlanetSkyProperties PlanetPrimeProperties;
        /* 0xA0C */ public GcFogProperties AbandonedFreighterFog;
        /* 0xAF0 */ public GcSpaceSkyProperties SpaceSkyMin;
        /* 0xBA0 */ public GcSpaceSkyProperties SpaceSkyMax;
        /* 0xC50 */ public List<GcSpaceSkyColours> SpaceSkyColours;
        /* 0xC60 */ public GcPlanetWeatherColourData NightSkyColours;
        /* 0xD10 */ public Colour HeavyAirColour1;
        /* 0xD20 */ public Colour HeavyAirColour2;
        /* 0xD30 */ public Colour NightHorizonColour;
        /* 0xD40 */ public Colour NightSkyColour;
        /* 0xD50 */ public Colour NightFogColour;
        /* 0xD60 */ public Colour NightHeightFogColour;
        /* 0xD70 */ public GcPlanetCloudProperties PlanetCloudsMin;
        /* 0xDB0 */ public GcPlanetCloudProperties PlanetCloudsMax;
        /* 0xDF0 */ public float BinaryStarChance;
        /* 0xDF4 */ public float TernaryStarChance;
        /* 0xDF8 */ public float WeatherBloomGain;
        /* 0xDFC */ public float WeatherBloomGainSpeed;
        /* 0xE00 */ public float WeatherBloomThreshold;
        /* 0xE04 */ public float WeatherBloomThresholdSpeed;
        /* 0xE08 */ public float WeatherBloomImpulseSpeed;
        /* 0xE0C */ public TkCurveType WeatherBloomCurve;
        /* 0xE10 */ public float MaxRainWetness;
        /* 0xE14 */ public float RainWetnessFadeInTime;
        /* 0xE18 */ public float RainWetnessFadeOutTime;
    }
}
